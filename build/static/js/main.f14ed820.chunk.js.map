{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","services/cryptoApi.js","components/Loader.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/Exchanges.jsx","components/Homepage.jsx","services/cryptoNewsApi.js","components/News.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timeperiod","useGetCryptosQuery","useGetExchangesQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","Loader","Cryptocurrencies","simplified","cryptosList","data","isFetching","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","coins","filter","coin","name","toLowerCase","includes","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","id","title","rank","extra","iconUrl","hoverable","millify","price","marketCap","change","Typography","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Text","Option","Select","CryptoDetails","useParams","setTimeperiod","cryptoDetails","stats","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","FundOutlined","numberOfExchanges","MoneyCollectOutlined","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","HTMLReactParser","description","links","link","type","href","rel","Panel","Collapse","Exchanges","exchangesList","exchanges","span","exchange","showArrow","header","marketShare","Homepage","globalStats","console","log","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","style","maxWidth","maxHeight","image","thumbnail","contentUrl","alt","substring","provider","moment","datePublished","startOf","fromNow","App","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"wPAAe,MAA0B,2C,gBC6D1BA,EAtDA,WACX,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,mBAAS,MAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAoBA,OAlBAC,qBAAU,WACN,IAAMC,EAAe,kBAAMF,EAAcG,OAAOC,aAMhD,OAJAD,OAAOE,iBAAiB,SAAUH,GAElCA,IAEO,kBAAMC,OAAOG,oBAAoB,SAAUJ,MACnD,IAEHD,qBAAU,WAEFH,IADDC,EAAa,QAKjB,CAACA,IAGA,sBAAKQ,UAAU,gBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,cAAC,IAAD,CAAQC,IAAKC,EAAMC,KAAK,UACxB,cAAC,IAAWC,MAAZ,CAAkBC,MAAO,EAAGL,UAAU,OAAtC,SACI,cAAC,IAAD,CAAMM,GAAG,IAAT,4BAEJ,cAAC,IAAD,CAAQN,UAAU,yBAAyBO,QAAS,kBAAMhB,GAAeD,IAAzE,SACI,cAACkB,EAAA,EAAD,SAGPlB,GAEE,eAAC,IAAD,CAAMmB,MAAM,OAAZ,UACI,cAAC,IAAKC,KAAN,UACI,cAAC,IAAD,CAAMJ,GAAG,IAAT,oBAEJ,cAAC,IAAKI,KAAN,UACI,cAAC,IAAD,CAAMJ,GAAG,oBAAT,gCAEJ,cAAC,IAAKI,KAAN,UACI,cAAC,IAAD,CAAMJ,GAAG,aAAT,yBAEJ,cAAC,IAAKI,KAAN,UACI,cAAC,IAAD,CAAMJ,GAAG,QAAT,2B,oECnDjBK,EAAkB,CACpB,kBAAmB,8BACnB,iBAAkB,sDAKhBC,EAAgB,SAACC,GAAD,MAAU,CAACA,MAAKC,QAASH,IAElCI,EAAYC,YAAU,CAC/BC,YAAa,YACbC,UAAWC,YAAe,CAAEC,QANlB,wCAOVC,UAAW,SAACC,GAAD,MAAc,CACrBC,WAAYD,EAAQE,MAAM,CACtBA,MAAO,SAACC,GAAD,OAAWb,EAAc,iBAAD,OAAkBa,OAErDC,aAAcJ,EAAQE,MAAM,CACxBA,MAAO,SAACC,GAAD,OAAWb,EAAc,kBAEpCe,iBAAkBL,EAAQE,MAAM,CAC7BA,MAAO,SAACI,GAAD,OAAahB,EAAc,SAAD,OAAUgB,OAE9CC,iBAAkBP,EAAQE,MAAM,CAC5BA,MAAO,gBAAEI,EAAF,EAAEA,OAAQE,EAAV,EAAUA,WAAV,OAA2BlB,EAAc,SAAD,OAAUgB,EAAV,oBAA4BE,WAKxEC,EAA+FhB,EAA/FgB,mBAAmBC,EAA4EjB,EAA5EiB,qBAAsBC,EAAsDlB,EAAtDkB,yBAA0BC,EAA4BnB,EAA5BmB,yB,SCjBnEC,EATA,WACX,OACI,qBAAKnC,UAAU,SAAf,SACI,cAAC,IAAD,OC8CGoC,EA7CU,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAExB,EAAyCN,EAD3BM,EAAa,GAAK,KAClBC,EAAd,EAAQC,KAAmBC,EAA3B,EAA2BA,WAC3B,EAA8BnD,mBAAS,IAAvC,mBAAOoD,EAAP,KAAgBC,EAAhB,KACA,EAAoCrD,mBAAS,IAA7C,mBAAOsD,EAAP,KAAmBC,EAAnB,KASA,OAPAlD,qBAAU,WAAO,IAAD,EACNmD,EAAY,OAAGP,QAAH,IAAGA,GAAH,UAAGA,EAAaC,YAAhB,aAAG,EAAmBO,MAAMC,QAAO,SAACC,GAAD,OAASA,EAAKC,KAAKC,cAAcC,SAASR,EAAWO,kBAE1GR,EAAWG,KAEZ,CAACP,EAAaK,IAEdH,EAAmB,cAAC,EAAD,IAGlB,sCACIH,GACF,qBAAKrC,UAAU,gBAAf,SACI,cAAC,IAAD,CAAOoD,YAAY,wBAAwBC,SAAU,SAACC,GAAD,OAAOV,EAAcU,EAAEC,OAAOC,YAIvF,cAAC,IAAD,CAAKC,OAAS,CAAC,GAAI,IAAKzD,UAAU,wBAAlC,gBACKyC,QADL,IACKA,OADL,EACKA,EAASiB,KAAI,SAACC,GAAD,OACV,cAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAG9D,UAAU,cAAtC,SACI,cAAC,IAAD,CAAMM,GAAE,kBAAaqD,EAASI,IAA9B,SACQ,eAAC,IAAD,CACAC,MAAK,UAAKL,EAASM,KAAd,aAAuBN,EAASV,MACrCiB,MAAO,qBAAKlE,UAAU,eAAeC,IAAK0D,EAASQ,UACnDC,WAAS,EAHT,UAKG,wCAAWC,IAAQV,EAASW,OAA5B,QACC,6CAAgBD,IAAQV,EAASY,cACjC,+CAAkBF,IAAQV,EAASa,QAAnC,aATyCb,EAASI,a,4GC7B5E3D,EAAUqE,IAAVrE,MAqDOsE,EAnDG,SAAC,GAIjB,IAJ8D,IAAD,EAA1CC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SACxCC,EAAY,GACZC,EAAgB,GAEbC,EAAI,EAAGA,GAAC,OAAGL,QAAH,IAAGA,GAAH,UAAGA,EAAapC,YAAhB,iBAAG,EAAmB0C,eAAtB,aAAG,EAA4BC,QAAQF,GAAK,EAAG,CAAC,IAAD,MAC9DF,EAAUK,KAAV,OAAeR,QAAf,IAAeA,GAAf,UAAeA,EAAapC,YAA5B,aAAe,EAAmB0C,QAAQD,GAAGV,OAG/C,IAAK,IAAIU,EAAI,EAAGA,GAAC,OAAGL,QAAH,IAAGA,GAAH,UAAGA,EAAapC,YAAhB,iBAAG,EAAmB0C,eAAtB,aAAG,EAA4BC,QAAQF,GAAK,EAAG,CAAC,IAAD,MAC9DD,EAAcI,KAAK,IAAIC,KAAJ,OAAST,QAAT,IAASA,GAAT,UAASA,EAAapC,YAAtB,aAAS,EAAmB0C,QAAQD,GAAGK,WAAWC,sBAGvE,IAAM/C,EAAO,CACXgD,OAAQR,EACRS,SAAU,CACR,CACEC,MAAO,eACPlD,KAAMuC,EACNY,MAAM,EACNC,gBAAiB,UACjBC,YAAa,aAiBnB,OACE,qCACE,eAAC,IAAD,CAAK5F,UAAU,eAAf,UACE,eAACI,EAAD,CAAOC,MAAO,EAAGL,UAAU,cAA3B,UAA0C6E,EAA1C,mBACA,eAAC,IAAD,CAAK7E,UAAU,kBAAf,UACE,eAACI,EAAD,CAAOC,MAAO,EAAGL,UAAU,eAA3B,4BAAmD2E,QAAnD,IAAmDA,GAAnD,UAAmDA,EAAapC,YAAhE,aAAmD,EAAmBiC,OAAtE,OACA,eAACpE,EAAD,CAAOC,MAAO,EAAGL,UAAU,gBAA3B,qBAAoD6E,EAApD,aAAwED,WAG5E,cAAC,IAAD,CAAMrC,KAAMA,EAAMsD,QArBN,CACdC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,aCzBjB7F,EAAgBqE,IAAhBrE,MAAO8F,GAASzB,IAATyB,KACPC,GAAWC,IAAXD,OA4FOE,GA1FO,WAAO,IAAD,QAClBzE,EAAW0E,cAAX1E,OACR,EAAoCvC,mBAAS,MAA7C,mBAAOyC,EAAP,KAAmByE,EAAnB,KACA,EAA6BtE,EAAyBL,GAA9CW,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WACAmC,EAAgBzC,EAAyB,CAAEN,SAAQE,eAAzDS,KACFiE,EAAa,OAAGjE,QAAH,IAAGA,GAAH,UAAGA,EAAMA,YAAT,aAAG,EAAYS,KAElC,GAAIR,EAAY,OAAO,cAAC,EAAD,IAEvB,IAEMiE,EAAQ,CACZ,CAAEzC,MAAO,eAAgBR,MAAM,KAAD,OAAOgD,EAAclC,OAASD,IAAQmC,EAAclC,QAAUpE,KAAM,cAACwG,EAAA,EAAD,KAClG,CAAE1C,MAAO,OAAQR,MAAOgD,EAAcvC,KAAM/D,KAAM,cAACyG,EAAA,EAAD,KAClD,CAAE3C,MAAO,aAAcR,MAAM,KAAD,OAAOgD,EAAcI,QAAUvC,IAAQmC,EAAcI,SAAW1G,KAAM,cAAC2G,EAAA,EAAD,KAClG,CAAE7C,MAAO,aAAcR,MAAM,KAAD,OAAOgD,EAAcjC,WAAaF,IAAQmC,EAAcjC,YAAcrE,KAAM,cAACwG,EAAA,EAAD,KACxG,CAAE1C,MAAO,4BAA6BR,MAAM,KAAD,OAAOa,IAAQmC,EAAcM,YAAYxC,QAAUpE,KAAM,cAAC6G,EAAA,EAAD,MAGhGC,EAAe,CACnB,CAAEhD,MAAO,oBAAqBR,MAAOgD,EAAcS,gBAAiB/G,KAAM,cAACgH,EAAA,EAAD,KAC1E,CAAElD,MAAO,sBAAuBR,MAAOgD,EAAcW,kBAAmBjH,KAAM,cAACkH,EAAA,EAAD,KAC9E,CAAEpD,MAAO,kBAAmBR,MAAOgD,EAAca,eAAiB,cAACC,EAAA,EAAD,IAAoB,cAACC,EAAA,EAAD,IAAkBrH,KAAM,cAACsH,EAAA,EAAD,KAC9G,CAAExD,MAAO,eAAgBR,MAAM,KAAD,OAAOa,IAAQmC,EAAciB,cAAgBvH,KAAM,cAACsH,EAAA,EAAD,KACjF,CAAExD,MAAO,qBAAsBR,MAAM,KAAD,OAAOa,IAAQmC,EAAckB,oBAAsBxH,KAAM,cAACsH,EAAA,EAAD,MAG/F,OACE,eAAC,IAAD,CAAKxH,UAAU,wBAAf,UACE,eAAC,IAAD,CAAKA,UAAU,yBAAf,UACE,eAAC,EAAD,CAAOK,MAAO,EAAGL,UAAU,YAA3B,iBACGuC,QADH,IACGA,GADH,UACGA,EAAMA,YADT,aACG,EAAYS,KAAKC,KADpB,YAC4BV,QAD5B,IAC4BA,GAD5B,UAC4BA,EAAMA,YADlC,aAC4B,EAAYS,KAAK2E,KAD7C,aAGA,8BAAInB,EAAcvD,KAAlB,sFAEF,cAAC,IAAD,CAAQ2E,aAAa,KAAK5H,UAAU,oBAAoBoD,YAAY,oBAAoBC,SAAU,SAACG,GAAD,OAAW+C,EAAc/C,IAA3H,SA1BS,CAAC,KAAM,MAAO,KAAM,MAAO,KAAM,KAAM,KAAM,MA2B9CE,KAAI,SAACmE,GAAD,OAAU,cAAC1B,GAAD,UAAoB0B,GAAPA,QAEnC,cAAC,EAAD,CAAWlD,YAAaA,EAAaC,aAAcP,IAAQmC,EAAclC,OAAQO,SAAU2B,EAAcvD,OACzG,eAAC,IAAD,CAAKjD,UAAU,kBAAf,UACE,eAAC,IAAD,CAAKA,UAAU,wBAAf,UACE,eAAC,IAAD,CAAKA,UAAU,gCAAf,UACE,eAAC,EAAD,CAAOK,MAAO,EAAGL,UAAU,uBAA3B,UAAmDwG,EAAcvD,KAAjE,uBACA,uEAA0CuD,EAAcvD,KAAxD,6EAEDwD,EAAM/C,KAAI,gBAAGxD,EAAH,EAAGA,KAAM8D,EAAT,EAASA,MAAOR,EAAhB,EAAgBA,MAAhB,OACT,eAAC,IAAD,CAAKxD,UAAU,aAAf,UACE,eAAC,IAAD,CAAKA,UAAU,kBAAf,UACE,cAACkG,GAAD,UAAOhG,IACP,cAACgG,GAAD,UAAOlC,OAET,cAACkC,GAAD,CAAMlG,UAAU,QAAhB,SAAyBwD,aAI/B,eAAC,IAAD,CAAKxD,UAAU,mBAAf,UACE,eAAC,IAAD,CAAKA,UAAU,gCAAf,UACE,cAAC,EAAD,CAAOK,MAAO,EAAGL,UAAU,uBAA3B,8BACA,uEAA0CwG,EAAcvD,KAAxD,6EAED+D,EAAatD,KAAI,gBAAGxD,EAAH,EAAGA,KAAM8D,EAAT,EAASA,MAAOR,EAAhB,EAAgBA,MAAhB,OAChB,eAAC,IAAD,CAAKxD,UAAU,aAAf,UACE,eAAC,IAAD,CAAKA,UAAU,kBAAf,UACE,cAACkG,GAAD,UAAOhG,IACP,cAACgG,GAAD,UAAOlC,OAET,cAACkC,GAAD,CAAMlG,UAAU,QAAhB,SAAyBwD,gBAKjC,eAAC,IAAD,CAAKxD,UAAU,iBAAf,UACE,eAAC,IAAD,CAAKA,UAAU,YAAf,UACE,eAAC,EAAD,CAAOK,MAAO,EAAGL,UAAU,uBAA3B,qBAA2DwG,EAAcvD,KAAzE,OACC6E,YAAgBtB,EAAcuB,gBAEjC,eAAC,IAAD,CAAK/H,UAAU,aAAf,UACE,eAAC,EAAD,CAAOK,MAAO,EAAGL,UAAU,uBAA3B,UAAmDwG,EAAcvD,KAAjE,YADF,UAEGuD,EAAcwB,aAFjB,aAEG,EAAqBtE,KAAI,SAACuE,GAAD,OACxB,eAAC,IAAD,CAAKjI,UAAU,YAAf,UACE,cAAC,EAAD,CAAOK,MAAO,EAAGL,UAAU,YAA3B,SAAwCiI,EAAKC,OAC7C,mBAAGC,KAAMF,EAAKpH,IAAK0C,OAAO,SAAS6E,IAAI,aAAvC,SAAqDH,EAAKhF,SAF5BgF,EAAKhF,mB,UCrFzCiD,GAASzB,IAATyB,KACAmC,GAAUC,KAAVD,MA8COE,GA5CG,WAAO,IAAD,EACtB,EAA6BvG,IAArBO,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WACRgG,EAAa,OAAGjG,QAAH,IAAGA,GAAH,UAAGA,EAAMA,YAAT,aAAG,EAAYkG,UAElC,OAAIjG,EAAmB,cAAC,EAAD,IAGrB,qCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKkG,KAAM,EAAX,uBACA,cAAC,IAAD,CAAKA,KAAM,EAAX,8BACA,cAAC,IAAD,CAAKA,KAAM,EAAX,qBACA,cAAC,IAAD,CAAKA,KAAM,EAAX,uBAEF,cAAC,IAAD,UACGF,EAAc9E,KAAI,SAACiF,GAAD,OACjB,cAAC,IAAD,CAAKD,KAAM,GAAX,SACE,cAAC,KAAD,UACE,cAACL,GAAD,CAEEO,WAAW,EACXC,OACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAKH,KAAM,EAAX,UACE,cAAC,GAAD,UAAM,mCAASC,EAAS1E,KAAlB,SACN,cAAC,IAAD,CAAQjE,UAAU,iBAAiBC,IAAK0I,EAASxE,UACjD,cAAC,GAAD,UAAM,iCAASwE,EAAS1F,YAE1B,eAAC,IAAD,CAAKyF,KAAM,EAAX,cAAgBrE,IAAQsE,EAAS/B,WACjC,cAAC,IAAD,CAAK8B,KAAM,EAAX,SAAerE,IAAQsE,EAAS1B,mBAChC,eAAC,IAAD,CAAKyB,KAAM,EAAX,UAAerE,IAAQsE,EAASG,aAAhC,SARQH,EAAS5E,IAJvB,SAgBG+D,YAAgBa,EAASZ,aAAe,KAfpCY,EAAS5E,iB,UCrBtB3D,GAAWqE,IAAXrE,MAqCO2I,GAnCE,WAAO,IAAD,EACnB,EAA6BhH,EAAmB,IAAxCQ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WACRwG,EAAW,OAAGzG,QAAH,IAAGA,GAAH,UAAGA,EAAMA,YAAT,aAAG,EAAYkE,MAIhC,OAFAwC,QAAQC,IAAI3G,GAETC,EAAmB,cAAC,EAAD,IAGlB,qCACA,cAAC,GAAD,CAAOnC,MAAO,EAAGL,UAAU,UAA3B,sCACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAK0I,KAAM,GAAX,SAAe,cAAC,KAAD,CAAW1E,MAAM,yBAAyBR,MAAOa,IAAQ2E,EAAYG,WACpF,cAAC,IAAD,CAAKT,KAAM,GAAX,SAAe,cAAC,KAAD,CAAW1E,MAAM,kBAAkBR,MAAOa,IAAQ2E,EAAYI,oBAC7E,cAAC,IAAD,CAAKV,KAAM,GAAX,SAAe,cAAC,KAAD,CAAW1E,MAAM,mBAAmBR,MAAOa,IAAQ2E,EAAYK,oBAC9E,cAAC,IAAD,CAAKX,KAAM,GAAX,SAAe,cAAC,KAAD,CAAW1E,MAAM,mBAAmBR,MAAOa,IAAQ2E,EAAYM,oBAC9E,cAAC,IAAD,CAAKZ,KAAM,GAAX,SAAe,cAAC,KAAD,CAAW1E,MAAM,gBAAgBR,MAAOa,IAAQ2E,EAAYO,qBAE/E,sBAAKvJ,UAAU,yBAAf,UACI,cAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,aAA3B,kDACA,cAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,YAA3B,SAAuC,cAAC,IAAD,CAAMM,GAAG,oBAAT,4BAG3C,cAAC,EAAD,CAAkB+B,YAAU,IAE5B,sBAAKrC,UAAU,yBAAf,UACI,cAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,aAA3B,gCACA,cAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,YAA3B,SAAuC,cAAC,IAAD,CAAMM,GAAG,QAAT,4BAG3C,cAAC,GAAD,CAAM+B,YAAU,Q,qBCvClBmH,GAAoB,CACtB,iBAAkB,OAClB,kBAAmB,mCACnB,iBAAkB,sDAOPC,GAAgBzI,YAAU,CACrCC,YAAa,gBACbC,UAAWC,YAAe,CAAEC,QANf,8CAObC,UAAW,SAACC,GAAD,MAAc,CACrBoI,cAAepI,EAAQE,MAAM,CACzBA,MAAO,gBAAGmI,EAAH,EAAGA,aAAclI,EAAjB,EAAiBA,MAAjB,MAPe,CAACZ,IAO2B,mBAAD,OAAoB8I,EAApB,8DAAsFlI,GAP3GX,QAAS0I,WAalCI,GAAyBH,GAAzBG,sBCfP1D,GAAgBzB,IAAhByB,KAAM9F,GAAUqE,IAAVrE,MACP+F,GAAUC,IAAVD,OAED0D,GAAW,kEAsDFC,GApDF,SAAC,GAAoB,IAAD,EAAjBzH,EAAiB,EAAjBA,WACZ,EAAwChD,mBAAS,kBAAjD,mBAAOsK,EAAP,KAAqBI,EAArB,KACcC,EAAeJ,GAAsB,CAAED,eAAclI,MAAOY,EAAa,EAAI,KAAnFE,KACAA,EAASR,EAAmB,KAA5BQ,KAER,OAAG,OAACyH,QAAD,IAACA,OAAD,EAACA,EAAYxG,OAIZ,eAAC,IAAD,CAAKC,OAAQ,CAAC,GAAG,IAAjB,WACMpB,GACE,cAAC,IAAD,CAAKqG,KAAM,GAAX,SACI,eAAC,IAAD,CACIuB,YAAU,EACVjK,UAAU,cACVoD,YAAY,kBACZ8G,iBAAiB,WACjB7G,SAAU,SAACG,GAAD,OAAWuG,EAAgBvG,IACrC2G,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOC,SAASpH,cAAcqH,QAAQH,EAAMlH,gBAAkB,GANnG,UAQI,cAAC,GAAD,CAAQM,MAAM,iBAAd,4BARJ,OASKjB,QATL,IASKA,GATL,UASKA,EAAMA,YATX,aASK,EAAYO,MAAMY,KAAI,SAACV,GAAD,OAAS,cAAC,GAAD,CAAQQ,MAAOR,EAAKC,KAApB,SAA2BD,EAAKC,eAI3E+G,EAAWxG,MAAME,KAAI,SAAC8G,EAAMxF,GAAP,uBAClB,cAAC,IAAD,CAAKpB,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAzB,SACI,cAAC,IAAD,CAAMM,WAAS,EAACpE,UAAU,YAA1B,SACI,oBAAGmI,KAAMqC,EAAK3J,IAAK0C,OAAO,SAAS6E,IAAI,aAAvC,UACI,sBAAKpI,UAAU,uBAAf,UACI,cAAC,GAAD,CAAOA,UAAU,aAAaK,MAAO,EAArC,SAAyCmK,EAAKvH,OAC9C,qBAAKwH,MAAO,CAACC,SAAS,QAAUC,UAAU,SAAU1K,KAAS,OAAJuK,QAAI,IAAJA,GAAA,UAAAA,EAAMI,aAAN,mBAAaC,iBAAb,eAAwBC,aAAcjB,GAAYkB,IAAI,YAEnH,4BACKP,EAAKzC,YAAc,IAAnB,UACSyC,EAAKzC,YAAYiD,UAAU,EAAG,KADvC,OAEOR,EAAKzC,cAGjB,sBAAK/H,UAAU,qBAAf,UACI,cAAC,IAAD,CAAQC,KAAK,UAAAuK,EAAKS,SAAS,UAAd,mBAAkBL,aAAlB,mBAAyBC,iBAAzB,eAAoCC,aAAcjB,GAAYkB,IAAI,KAC/E,cAAC,GAAD,CAAM/K,UAAU,gBAAhB,mBAAiCwK,EAAKS,SAAS,UAA/C,aAAiC,EAAkBhI,UAEvD,cAAC,GAAD,UAAOiI,KAAOV,EAAKW,eAAeC,QAAQ,MAAMC,kBAjB3BrG,SArBf,cAAC,EAAD,KCkCnBsG,I,OA7CH,WACR,OACI,sBAAKtL,UAAU,MAAf,UACI,qBAAKA,UAAU,SAAf,SACI,cAAC,EAAD,MAEJ,sBAAKA,UAAU,OAAf,UACI,cAAC,IAAD,UACI,qBAAKA,UAAU,SAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOuL,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,aAAlB,SACK,cAAC,GAAD,MAEL,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,oBAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,kBAAlB,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,QAAlB,SACI,cAAC,GAAD,aAMhB,sBAAKxL,UAAU,SAAf,UACE,eAAC,IAAWI,MAAZ,CAAkBC,MAAO,EAAGoK,MAAO,CAAEgB,MAAM,QAASC,UAAU,UAA9D,0BACe,uBADf,yBAIA,eAAC,IAAD,WACE,cAAC,IAAD,CAAMpL,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,aAAT,uBACA,cAAC,IAAD,CAAMA,GAAG,QAAT,gC,iBCvCLqL,gBAAe,CAC1BC,SAAO,oBACF7K,EAAUE,YAAcF,EAAU6K,SADhC,eAEFnC,GAAcxI,YAAcwI,GAAcmC,SAFxC,K,OCGXC,IAASC,OACC,cAAC,IAAD,UACG,cAAC,IAAD,CAAUC,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGLC,SAASC,eAAe,W","file":"static/js/main.f14ed820.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useEffect, useState} from 'react';\r\nimport { Button, Menu, Typography, Avatar} from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport icon from '../images/cryptocurrency.png';\r\nimport { MenuOutlined } from '@ant-design/icons';\r\n\r\nconst Navbar = () => {\r\n    const [activeMenu, setActiveMenu] = useState(true);\r\n    const [screenSize, setScreenSize] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => setScreenSize(window.innerWidth);\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        handleResize();\r\n\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(screenSize < 768){\r\n            setActiveMenu(false);\r\n        }else {\r\n            setActiveMenu(true);\r\n        }\r\n    }, [screenSize])\r\n\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"logo-container\">\r\n                <Avatar src={icon} size=\"large\" />\r\n                <Typography.Title level={2} className=\"logo\">\r\n                    <Link to=\"/\">Crypto World</Link>\r\n                </Typography.Title>\r\n                <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}>\r\n                    <MenuOutlined />\r\n                </Button>\r\n            </div>\r\n            {activeMenu && (\r\n\r\n               <Menu theme=\"dark\">\r\n                   <Menu.Item >\r\n                       <Link to=\"/\">Home</Link>\r\n                   </Menu.Item>\r\n                   <Menu.Item >\r\n                       <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n                   </Menu.Item>\r\n                   <Menu.Item>\r\n                       <Link to=\"/exchanges\">Exchanges</Link>\r\n                   </Menu.Item>\r\n                   <Menu.Item >\r\n                       <Link to=\"/news\">News</Link>\r\n                   </Menu.Item>\r\n               </Menu>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import{ createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst cryptoApiHeaders ={\r\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n    'x-rapidapi-key': '689c9a7fa7msh7a4f93cdbe66621p1868f3jsn02b14865c80a'\r\n}\r\n\r\nconst baseUrl='https://coinranking1.p.rapidapi.com'\r\n\r\nconst createRequest = (url) => ({url, headers: cryptoApiHeaders})\r\n\r\nexport const cryptoApi = createApi({\r\n    reducerPath: 'cryptoApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl}),\r\n    endpoints: (builder) => ({\r\n        getCryptos: builder.query({\r\n            query: (count) => createRequest(`./coins?limit=${count}`),\r\n        }),\r\n        getExchanges: builder.query({\r\n            query: (count) => createRequest(`./exchanges`),\r\n        }),\r\n        getCryptoDetails: builder.query({\r\n           query: (coinId)  => createRequest(`/coin/${coinId}`),\r\n        }),\r\n        getCryptoHistory: builder.query({\r\n            query: ({coinId, timeperiod})  => createRequest(`/coin/${coinId}/history/${timeperiod}`),\r\n         })\r\n    })\r\n});\r\n\r\nexport const { useGetCryptosQuery,useGetExchangesQuery, useGetCryptoDetailsQuery, useGetCryptoHistoryQuery} = cryptoApi ;","import React from 'react';\r\nimport {Spin} from 'antd';\r\n\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className='Loader'>\r\n            <Spin />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React, { useState, useEffect } from 'react';\r\nimport millify from 'millify';\r\nimport { Link } from 'react-router-dom';\r\nimport {Card, Row, Col, Input} from 'antd';\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst Cryptocurrencies = ({ simplified }) => {\r\n    const count = simplified ? 10 : 100;\r\n    const { data: cryptosList, isFetching} = useGetCryptosQuery(count);\r\n    const [cryptos, setCryptos] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    useEffect(() => {\r\n        const filteredData = cryptosList?.data?.coins.filter((coin)=> coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\r\n\r\n        setCryptos(filteredData);\r\n\r\n    }, [cryptosList, searchTerm]);\r\n\r\n    if(isFetching) return <Loader />;\r\n\r\n    return (\r\n        <>\r\n          {!simplified &&(\r\n          <div className=\"search-crypto\">\r\n              <Input placeholder=\"Search Cryptocurrency\" onChange={(e) => setSearchTerm(e.target.value)}/>\r\n          </div>\r\n          )}\r\n\r\n          <Row gutter ={[32, 32]} className=\"crypto-card-container\">\r\n              {cryptos?.map((currency) => (\r\n                  <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n                      <Link to={`/crypto/${currency.id}`}>\r\n                              <Card \r\n                              title={`${currency.rank}. ${currency.name}`}\r\n                              extra={<img className=\"crypto-image\" src={currency.iconUrl}/>}\r\n                              hoverable\r\n                              >\r\n                                 <p>Price: {millify(currency.price)} $</p>\r\n                                  <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                                  <p>Daily Change: {millify(currency.change)}%</p>\r\n                              </Card>\r\n                              </Link>\r\n                  </Col>\r\n            ))}\r\n            </Row>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default Cryptocurrencies\r\n","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Col, Row, Typography } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n  const coinPrice = [];\r\n  const coinTimestamp = [];\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinPrice.push(coinHistory?.data?.history[i].price);\r\n  }\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\r\n  }\r\n\r\n  const data = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: 'Price In USD',\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: '#0071bd',\r\n        borderColor: '#0071bd',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"chart-header\">\r\n        <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\r\n        <Col className=\"price-container\">\r\n          <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\r\n          <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\r\n        </Col>\r\n      </Row>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;","import React, { useState } from 'react';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport { useParams } from 'react-router-dom';\r\nimport millify from 'millify';\r\nimport { Col, Row, Typography, Select } from 'antd';\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\n\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\nimport LineChart from './LineChart';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n  const { coinId } = useParams();\r\n  const [timeperiod, setTimeperiod] = useState('7d');\r\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n  const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timeperiod });\r\n  const cryptoDetails = data?.data?.coin;\r\n\r\n  if (isFetching) return <Loader />;\r\n\r\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n  const stats = [\r\n    { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n    { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n    { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n    { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n    { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n  ];\r\n\r\n  const genericStats = [\r\n    { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n    { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n    { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n    { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n    { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n  ];\r\n\r\n  return (\r\n    <Col className=\"coin-detail-container\">\r\n      <Col className=\"coin-heading-container\">\r\n        <Title level={2} className=\"coin-name\">\r\n          {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\r\n        </Title>\r\n        <p>{cryptoDetails.name} live price in US Dollar (USD). View value statistics, market cap and supply.</p>\r\n      </Col>\r\n      <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Timeperiod\" onChange={(value) => setTimeperiod(value)}>\r\n        {time.map((date) => <Option key={date}>{date}</Option>)}\r\n      </Select>\r\n      <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\r\n      <Col className=\"stats-container\">\r\n        <Col className=\"coin-value-statistics\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\r\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n          </Col>\r\n          {stats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n        <Col className=\"other-stats-info\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\r\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n          </Col>\r\n          {genericStats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n      <Col className=\"coin-desc-link\">\r\n        <Row className=\"coin-desc\">\r\n          <Title level={3} className=\"coin-details-heading\">What is {cryptoDetails.name}?</Title>\r\n          {HTMLReactParser(cryptoDetails.description)}\r\n        </Row>\r\n        <Col className=\"coin-links\">\r\n          <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\r\n          {cryptoDetails.links?.map((link) => (\r\n            <Row className=\"coin-link\" key={link.name}>\r\n              <Title level={5} className=\"link-name\">{link.type}</Title>\r\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\r\n            </Row>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default CryptoDetails;","import React from 'react';\r\nimport millify from 'millify';\r\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\r\nimport HTMLReactParser from 'html-react-parser';\r\n\r\nimport { useGetExchangesQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst Exchanges = () => {\r\n  const { data, isFetching } = useGetExchangesQuery();\r\n  const exchangesList = data?.data?.exchanges;\r\n\r\n  if (isFetching) return <Loader />;\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={6}>Exchanges</Col>\r\n        <Col span={6}>24h Trade Volume</Col>\r\n        <Col span={6}>Markets</Col>\r\n        <Col span={6}>Change</Col>\r\n      </Row>\r\n      <Row>\r\n        {exchangesList.map((exchange) => (\r\n          <Col span={24}>\r\n            <Collapse>\r\n              <Panel\r\n                key={exchange.id}\r\n                showArrow={false}\r\n                header={(\r\n                  <Row key={exchange.id}>\r\n                    <Col span={6}>\r\n                      <Text><strong>{exchange.rank}.</strong></Text>\r\n                      <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\r\n                      <Text><strong>{exchange.name}</strong></Text>\r\n                    </Col>\r\n                    <Col span={6}>${millify(exchange.volume)}</Col>\r\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\r\n                  </Row>\r\n                  )}\r\n              >\r\n                {HTMLReactParser(exchange.description || '')}\r\n              </Panel>\r\n            </Collapse>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Exchanges;","import React from 'react' ;\r\nimport millify from 'millify';\r\nimport { Typography, Row, Col, Statistic } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport { Cryptocurrencies, News } from '../components';\r\nimport Loader from './Loader';\r\n\r\nconst { Title }  = Typography;\r\n\r\nconst Homepage = () => {\r\n    const { data, isFetching } = useGetCryptosQuery(10);\r\n    const globalStats = data?.data?.stats;\r\n\r\n    console.log(data);\r\n\r\n    if(isFetching) return <Loader />;;\r\n\r\n    return (\r\n        <>\r\n        <Title level={2} className=\"heading\">Global Crypto Statistics</Title>\r\n        <Row>\r\n            <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={millify(globalStats.total)}/></Col>\r\n            <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)}/></Col>\r\n            <Col span={12}><Statistic title=\"Total Market Cap\" value={millify(globalStats.totalMarketCap)}/></Col>\r\n            <Col span={12}><Statistic title=\"Total 24h Volume\" value={millify(globalStats.total24hVolume)}/></Col>\r\n            <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)}/></Col>\r\n        </Row>\r\n        <div className=\"home-heading-container\">\r\n            <Title level={2} className=\"home-title\">Top 10 Cryptocurrencies in the world</Title>\r\n            <Title level={3} className=\"show-more\"><Link to='/cryptocurrencies'>Show More</Link></Title>\r\n        </div>\r\n\r\n        <Cryptocurrencies simplified/>\r\n\r\n        <div className=\"home-heading-container\">\r\n            <Title level={2} className=\"home-title\">Latest Crypto News</Title>\r\n            <Title level={3} className=\"show-more\"><Link to='/news'>Show More</Link></Title>\r\n        </div>\r\n\r\n        <News simplified/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","import{ createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst cryptoNewsHeaders = {\r\n    'x-bingapis-sdk': 'true',\r\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n    'x-rapidapi-key': '689c9a7fa7msh7a4f93cdbe66621p1868f3jsn02b14865c80a'\r\n  }\r\n\r\n  const baseUrl ='https://bing-news-search1.p.rapidapi.com/' ;\r\n\r\n  const createRequest = (url) => ({url, headers: cryptoNewsHeaders})\r\n\r\n  export const cryptoNewsApi = createApi({\r\n    reducerPath: 'cryptoNewsApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl }),\r\n    endpoints: (builder) => ({\r\n        getCryptoNews: builder.query({\r\n            query: ({ newsCategory, count }) => createRequest(`./news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\r\n        })\r\n    })\r\n});\r\n\r\n\r\nexport const { useGetCryptoNewsQuery} = cryptoNewsApi ;","import React, { useState } from 'react';\r\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst { Text, Title } = Typography;\r\nconst {Option} = Select;\r\n\r\nconst demoImage ='https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\r\n\r\nconst News = ({ simplified }) => {\r\n    const [newsCategory, setNewsCategory] = useState('Cryptocurrency')\r\n    const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 6 : 12});\r\n    const { data } = useGetCryptosQuery(100);\r\n\r\n    if(!cryptoNews?.value) return <Loader />;\r\n\r\n\r\n    return (\r\n        <Row gutter={[24,24]}>\r\n            {!simplified && (\r\n                <Col span={24}>\r\n                    <Select\r\n                        showSearch\r\n                        className=\"select-news\"\r\n                        placeholder=\"Select a Crypto\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={(value) => setNewsCategory(value)}\r\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    >\r\n                        <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\r\n                        {data?.data?.coins.map((coin)=> <Option value={coin.name}>{coin.name}</Option>)}\r\n                    </Select>\r\n                </Col>\r\n            )}\r\n            {cryptoNews.value.map((news, i) => (\r\n                <Col xs={24} sm={12} lg={8} key={i}>\r\n                    <Card hoverable className=\"news-card\">\r\n                        <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n                            <div className=\"news-image-container\">\r\n                                <Title className=\"news-title\" level={4}>{news.name}</Title>\r\n                                <img style={{maxWidth:'200px' , maxHeight:'100px'}} src={news?.image?.thumbnail?.contentUrl || demoImage } alt=\"news\"/>\r\n                            </div>\r\n                            <p>\r\n                                {news.description > 100 \r\n                                     ? `${news.description.substring(0, 100)}...`\r\n                                     :  news.description\r\n                                 }\r\n                            </p>\r\n                            <div className=\"provider-container\">\r\n                                <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage } alt=\"\"/>\r\n                                <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\r\n                            </div>\r\n                            <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\r\n                        </a>\r\n                    </Card>\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default News\r\n","import React from 'react';\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\nimport { Layout, Typography, Space } from 'antd';\r\n\r\nimport {Navbar, Exchanges, Homepage, Cryptocurrencies, News, CryptoDetails} from './components';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"navbar\">\r\n                <Navbar />\r\n            </div>\r\n            <div className=\"main\">\r\n                <Layout>\r\n                    <div className=\"routes\">\r\n                        <Switch>\r\n                            <Route exact path=\"/\">\r\n                                <Homepage />\r\n                            </Route>\r\n                            <Route exact path=\"/exchanges\">\r\n                                {<Exchanges />}\r\n                            </Route>\r\n                            <Route exact path=\"/cryptocurrencies\">\r\n                                <Cryptocurrencies />\r\n                            </Route>\r\n                            <Route exact path=\"/crypto/:coinId\">\r\n                                <CryptoDetails />\r\n                            </Route>\r\n                            <Route exact path=\"/news\">\r\n                                <News />\r\n                            </Route>\r\n                        </Switch>\r\n                    </div>\r\n                </Layout>\r\n    \r\n                <div className=\"footer\">\r\n                  <Typography.Title level={5} style={{ color:'white', textAlign:'center'}}>\r\n                    Crypto World <br/>\r\n                    All rights reserved\r\n                  </Typography.Title>\r\n                  <Space>\r\n                    <Link to=\"/\">Home</Link>\r\n                    <Link to=\"/exchanges\">Exchanges</Link>\r\n                    <Link to=\"/news\">News</Link>\r\n                  </Space>\r\n                </div>\r\n             </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport { cryptoApi } from '../services/cryptoApi';\r\nimport { cryptoNewsApi } from '../services/cryptoNewsApi';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n    },\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport 'antd/dist/antd.css';\r\n\r\nReactDOM.render(\r\n          <Router>\r\n             <Provider store={store}>\r\n               <App />\r\n             </Provider>\r\n          </Router>,\r\n          document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}